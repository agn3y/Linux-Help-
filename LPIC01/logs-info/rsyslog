Syslog & Rsyslog – Complete Notes

1. Syslog – Protocol

- Syslog is a standardized logging protocol (RFC 5424).

Defines:
- Facilities (source/type of message: auth, cron, daemon, etc.)
- Severity levels (from debug to emerg)
- Message format
- Transport methods: UDP 514 (default), TCP, RELP

2. Rsyslog – Implementation
- rsyslog is a modern syslog daemon.
- More powerful than syslogd or syslog-ng.

Key features:
- Modular architecture (input, parsing, output)
- Supports DB backends (MySQL, PostgreSQL)
- Remote logging via TCP/UDP/RELP
- Log queueing and buffering
- Message filtering and formatting
- TLS encryption
- JSON and structured logging

3. File and Directory Structure

--------------------------------------------------------------------
Path						Purpose
--------------------------------------------------------------------
/etc/rsyslog.conf	    	Main config file
/etc/rsyslog.d/*.conf		Additional config snippets
/var/spool/rsyslog/			Spool directory (queued unsent logs)
/var/log/					Default log file storage
/dev/log					UNIX domain socket for local app logging
--------------------------------------------------------------------

4. Daemon Info

-----------------------------------------------
Name		Description
-----------------------------------------------
rsyslogd	Rsyslog daemon (runs in background)
-----------------------------------------------

$ systemctl start rsyslog
$ systemctl restart rsyslog
$ systemctl status rsyslog

5. Basic Rule Syntax

FACILITY.PRIORITY    ACTION

Examples:

	authpriv.*      /var/log/secure
*.info          /var/log/messages
*.emerg         *

-------------------------------------------------------
Field			Meaning
-------------------------------------------------------
FACILITY		Log source (e.g. auth, cron)
PRIORITY		Severity level (debug, info, err, etc.)
ACTION	    	File, DB, or remote destination
-------------------------------------------------------

6. Rsyslog Modules

-----------------------------------------------------------------
Module			Type		Function
-----------------------------------------------------------------
imuxsock		Input		Reads from /dev/log
imjournal		Input		Reads from systemd-journald
imklog			Input	    Reads kernel logs
imudp	        Input	    Accepts logs via UDP
imtcp			Input	    Accepts logs via TCP
omfile			Output	    Writes to file
ommysql			Output	    Sends logs to MySQL
ompgsql			Output	    Sends logs to PostgreSQL
omfwd	    	Output	    Forwards logs to remote syslog server
omrelp	        Output	    Forwards logs using RELP
------------------------------------------------------------------

List modules:

$ rsyslogd -v

7. Remote Logging Setup

- Send logs to a remote server

*.*  @192.168.1.100:514     # UDP
*.*  @@192.168.1.100:514    # TCP

- Accept logs on remote server

Add to /etc/rsyslog.conf:

module(load="imudp")
input(type="imudp" port="514")

module(load="imtcp")
input(type="imtcp" port="514")

8. Logging to Databases

- Load required output modules

module(load="ommysql")    # For MySQL
module(load="ompgsql")    # For PostgreSQL

Configuration example
*.* :ommysql:127.0.0.1,syslogdb,user,password

9. Log Rotation – logrotate
- Tool to manage log file size and backups.
- Installed by default.
- Controlled via:

------------------------------------------------------------
Path					Purpose
------------------------------------------------------------
/etc/logrotate.conf		Global logrotate settings
/etc/logrotate.d/		App-specific configs (e.g., rsyslog)
------------------------------------------------------------

Sample /etc/logrotate.d/rsyslog

/var/log/messages {
    weekly
    rotate 4
    compress
    delaycompress
    missingok
    notifempty
}

10. Real-Time Log Monitoring

$ tail -f /var/log/messages
$ journalctl -f             # Systemd log following
$ journalctl -xe            # Show latest errors

11. Rsyslog Internal Flow

[Application] 
     ↓
   /dev/log or journald
     ↓
 [Input Module: imuxsock / imjournal]
     ↓
 [Rules: filters based on facility/priority]
     ↓
 [Action: file, DB, remote, etc.]

12. Security Recommendations

- Use RELP or TCP+TLS for secure remote logging.
- Restrict log file access with permissions (chmod 600).
- Apply rate limiting to avoid log storms.
- Avoid logging sensitive user data in plaintext.

------------------------------------------------------  
Topic					Tool/Path
------------------------------------------------------
Main daemon				rsyslogd
Main config				/etc/rsyslog.conf
Extra config files		/etc/rsyslog.d/*.conf
Local logging			/var/log/*.log
DB support				ommysql, ompgsql
Remote logging			omfwd, omrelp, imudp, imtcp
Queuing					/var/spool/rsyslog/
Log rotation			logrotate, /etc/logrotate.conf
Live log viewing	    tail, journalctl
------------------------------------------------------
